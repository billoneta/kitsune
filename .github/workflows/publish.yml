name: Publish NPM

on:
 workflow_run:
  workflows: ['Release']
  types: [completed]

jobs:
 publish:
  if: >
   github.event.workflow_run.conclusion == 'success' && 
   github.event.workflow_run.event == 'push'
  name: Publish NPM
  runs-on: ubuntu-latest
  permissions:
   id-token: write
   contents: read
   packages: write
  strategy:
   fail-fast: false
   matrix:
    node: ['lts/*']
  steps:
   - name: Checkout code
     uses: actions/checkout@v4
     with:
      fetch-depth: 0

   - name: Check for new release tag
     id: check-release
     run: |
      LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
      NEW_TAGS=$(git tag --contains ${{ github.event.workflow_run.head_sha }} --list 'v*')
      if [ -z "$NEW_TAGS" ]; then
        echo "has_new_release=false" >> $GITHUB_OUTPUT
      else
        echo "has_new_release=true" >> $GITHUB_OUTPUT
        echo "release_tag=${NEW_TAGS[0]}" >> $GITHUB_OUTPUT
      fi

   - name: Skip if no release
     if: steps.check-release.outputs.has_new_release != 'true'
     run: echo "Skipping publish" && exit 0

   - name: Setup PNPM
     uses: pnpm/action-setup@v4
     with:
      standalone: true

   - name: Setup Node.js ${{ matrix.node }}
     uses: actions/setup-node@v4
     with:
      node-version: ${{ matrix.node }}
      always-auth: true
      cache: 'pnpm'

   - name: Install dependencies
     run: pnpm install

   - name: Build packages
     run: pnpm build

   - name: Deploy Package to GitHub Packages
     env:
      NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
      NPM_TAG: ${{ contains(steps.check-release.outputs.release_tag, '-') && 'next' || 'latest' }}
     run: |
      npm config set registry https://npm.pkg.github.com
      npm set //npm.pkg.github.com/:_authToken ${{ secrets.GITHUB_TOKEN }}
      pnpm publish --filter "./packages/*" --access public --no-git-checks --provenance --tag $NPM_TAG

   - name: Deploy Package to NPM
     env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      NPM_TAG: ${{ contains(steps.check-release.outputs.release_tag, '-') && 'next' || 'latest' }}
     run: |
      npm config set registry https://registry.npmjs.org
      npm set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}
      pnpm publish --filter "./packages/*" --access public --no-git-checks --provenance --tag $NPM_TAG
